Name:K.Deepak Reddy
Employee ID: CAP48LSRB305
1.What is difference in Overloading and Over riding.
	When two or more methods in the same class have the same name but different parameters, it’s called Overloading.
    	When the method signature (name and parameters) are the same in the superclass and the child class, it’s called Overriding.
    	overloading implements Runtime Polymorphism where as overirding implements compiletime polymorphism.
    	The method Overriding occurs between superclass and subclass. where as,Overloading occurs between the methods in the same class. 

2.If both the functions are statis can we over ride.
	No, we cannot override static methods because method overriding is based on dynamic binding at runtime and the static methods are 
	bonded using static binding at compile time.
	
3.Diffference bew Final , Finally and Finalize.
	The final keyword in java has different meaning depending upon it is applied to variable, class or method.
   	The value of variable declared as final cannot be changed once initialized.
   	The class which is declared as final cannot be subclassed.
   	The method which is declared as final cannot be overriden.
   	The finally keyword is used in association with a try/catch block and guarantees that a section of code will be executed, even if an exception is thrown.
   	It is a method that the Garbage Collector always calls just before the deletion/destroying the object which is eligible for Garbage Collection, so as to perform clean-up activity.

4.What are maker Interfaces.
	A marker interface is also called a tagging interface.A marker interface is an interface that has no methods or constants inside it.
   	It provides run-time type information about objects, so the compiler and JVM have additional information about the object.
   	The main reason for this is that they blur the lines about what an interface represents since markers don't define any behavior. 

5.What is Singleton class
	a singleton class is a class that can have only one object (an instance of the class) at a time. After the first time, if we try to instantiate the Singleton class, the new variable also points to the first instance created.
        So whatever modifications we do to any variable inside the class through any instance, affects the variable of the single instance created and is visible if we access that variable through any variable of that class type defined.

6.What is the underlying Data structure for Arraylist and Linkedlist
	ArrayList: is a resizable array implementation in java. The backing data structure of ArrayList is an array of Object class. 
		When creating an ArrayList you can provide initial capacity then the array is declared with the given capacity. 
		The default capacity value is 10. 
	linkedlist: internally, it is an implemented using Doubly Linked List Data Structure. It supports duplicate elements. 
		It stores or maintains it's elements in Insertion order. We can add any number of null elements.

7.What is hash collition
	In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time. 
	After the first time, if we try to instantiate the Singleton class, the new variable also points to the first instance created. 
	So whatever modifications we do to any variable inside the class through any instance, affects the variable of the single instance 
	created and is visible if we access that variable through any variable of that class type defined. 

8.What are lambda Expressions
	Lambda expression is a short block of code which takes in parameters and returns a value. 
	Lambda expressions are similar to methods, but they do not need a name and they can be implemented right in the body of a method.

9.Whats is functional interface
	Functional interface is an interface that contains only one abstract method. They can have only one functionality to exhibit. 
	From Java 8 onwards, lambda expressions can be used to represent the instance of a functional interface. 
	A functional interface can have any number of default methods.

10.What are optional classes in Java 8
	Optional is a container object used to contain not-null objects. Optional object is used to represent null with absent value. 
	This class has various utility methods to facilitate code to handle values as ‘available’ or ‘not available’ instead of checking null values. 


11.Whats is factory design pattern and Adapter and difference bew them	
	A Factory Pattern or Factory Method Pattern says that just define an interface or abstract class for creating an object but let the subclasses
	decide which class to instantiate. In other words, subclasses are responsible to create the instance of the class.
	Abstract Factory Pattern says that just define an interface or abstract class for creating families of related (or dependent) objects but 
	without specifying their concrete sub-classes.That means Abstract Factory lets a class returns a factory of classes. 
	So, this is the reason that Abstract Factory Pattern is one level higher than the Factory Pattern.

12.What are Solid principles
	Design principles encourage us to create more maintainable, understandable, and flexible software. Consequently, as our applications grow in size, 
	we can reduce their complexity
	Five concepts make up our SOLID principles:
		1.Single Responsibility
		2.Open/Closed
		3.Liskov Substitution
		4.Interface Segregation
		5.Dependency Inversion


13. What does @component and @scan do in Sprinboot annaotation
	@Component is a class-level annotation. It is used to denote a class as a Component. We can use @Component across the application to mark the beans as Spring’s managed components.
        A component is responsible for some operations. Spring framework provides three other specific annotations to be used when marking a class as a Component.
	1.@Service	
	2.@Repository
	3.@Controller
	spring provides a mechanism to identify Spring bean candidates explicitly through the @ComponentScan annotation.
        If the application is a Spring Boot application, then all the packages under the package containing the Spring Boot application class will be covered by an implicit component scan.


14.Whats is the Diference bew JPA , Hibernate and ORM.
	Java Persistence API (JPA) defines the management of relational data in the Java applications. 
	Hibernate is an Object-Relational Mapping (ORM) tool which is used to save the state of Java object into the database. 
	It is just a specification. Various ORM tools implement it for data persistence.

15.What is indexing in Database
	Indexing is a way to optimize the performance of a database by minimizing the number of disk accesses required when a query is processed. 
	It is a data structure technique which is used to quickly locate and access the data in a database


16. What are 4 types of Drivers in Jdbc
Ans There are 4 types of JDBC drivers:
	JDBC-ODBC bridge driver
	Native-API driver
	Network Protocol driver
	Thin driver


17. What is difrence bew @component and @bean and @service
Ans The difference is that @Bean is applicable to methods, whereas @Component is applicable to types.
    @Component is a generic stereotype for any Spring-managed component. @Service annotates classes at the service layer.


18. What is difference bew SOAP and restful services techinically
Ans The main difference is that SOAP is a protocol while REST is not. Typically, an API will adhere to either REST or SOAP,
    depending on the use case and preferences of the developer.


19. Difference in POST and PUT
Ans The difference between POST and PUT is that PUT requests are idempotent. That is, calling the same PUT request multiple
    times will always produce the same result. In contrast, calling a POST request repeatedly have side effects of creating
    the same resource multiple times.


20. is react uni directional or Bi directional
Ans React, a Javascript library, uses unidirectional data flow. The data from the parent is known as props. You can only transfer
   data from parent to child and not vice versa. This means that the child components cannot update or modify the data on their
   own, makeing sure that a clean data flow architecture is followed.
